#!/bin/bash

# Copyright Stamus Networks, 2018
# All rights reserved
# Debian Live/Install ISO script - oss@stamus-networks.com
#
# Please run on Debian Stretch

set -ex

# Setting up the LIVE root (during install on disk it is preseeded)
echo "root:StamusNetworks" | chpasswd

# Enable color output and the "ll" command in shell 
echo " export LS_OPTIONS='--color=auto'" >> /root/.bashrc
echo " alias ll='ls $LS_OPTIONS -l'" >> /root/.bashrc

###  Set up repos ###

wget -qO - http://packages.stamus-networks.com/packages.selks5.stamus-networks.com.gpg.key | apt-key add - 
wget -qO - https://packages.elastic.co/GPG-KEY-elasticsearch | apt-key add -
wget -qO - https://evebox.org/files/GPG-KEY-evebox | apt-key add -

cat >> /etc/apt/sources.list.d/elastic-6.x.list <<EOF
deb https://artifacts.elastic.co/packages/6.x/apt stable main
EOF

cat >> /etc/apt/sources.list.d/curator5.list <<EOF
deb [arch=amd64] https://packages.elastic.co/curator/5/debian9 stable main
EOF

cat >> /etc/apt/sources.list.d/evebox.list <<EOF
deb http://files.evebox.org/evebox/debian stable main
EOF

cat >> /etc/apt/sources.list.d/selks5.list <<EOF
# SELKS 5 Stamus Networks repos
#
# Manual changes here can be overwritten during 
# SELKS updates and upgrades !!

deb http://packages.stamus-networks.com/selks5/debian/ buster main
deb http://packages.stamus-networks.com/selks5/debian-kernel/ buster main
deb http://packages.stamus-networks.com/selks5/debian-test/ buster main
EOF

###  END Set up repos ###

mkdir -p  /opt/selks/

### START JAVA for ELK ###

apt-get update && \
apt-get install -y ca-certificates-java openjdk-11-jre-headless \
openjdk-11-jdk openjdk-11-jre openjdk-11-jre-headless

### END JAVA for ELK ###

### START ELK ###

apt-get update && \
apt-get install -y elasticsearch logstash kibana elasticsearch-curator

mkdir -p /var/cache/logstash/sincedbs/
chown logstash:logstash /var/cache/logstash/sincedbs/
/usr/share/logstash/bin/logstash-plugin install logstash-filter-geoip

/bin/systemctl enable elasticsearch && \
/bin/systemctl enable logstash && \
/bin/systemctl enable kibana && \
/bin/systemctl daemon-reload

### END ELK ###

### START Suricata ###

apt-get update && \
apt-get install -y libpcre3 libpcre3-dbg libpcre3-dev build-essential libpcap-dev   \
                libnet1-dev libyaml-0-2 libyaml-dev pkg-config zlib1g zlib1g-dev \
                libcap-ng-dev libcap-ng0 make libmagic-dev         \
                libnss3-dev libgeoip-dev liblua5.1-dev libhiredis-dev libevent-dev \
                python-yaml rustc cargo
apt-get install -y -o Dpkg::Options::="--force-confdef" suricata
apt-get install -y libnetfilter-queue-dev libnetfilter-queue1 libnetfilter-log-dev libnetfilter-log1 libnfnetlink-dev libnfnetlink0
apt-get install -y flow-tools
#make sure Suricata can write in /data/nsm
mkdir -p /data/nsm/
chown logstash -R /data/nsm/

apt-get install -y nftables
systemctl enable nftables.service

### END Suricata ###


### START Install kibana dashboards ###

apt-get install -y kibana-dashboards-stamus

### END Install kibana dashboards ###

### START Evebox ###

apt-get update && \
apt-get install -y evebox
/bin/systemctl enable evebox

### END Evebox ###

### START Install php ###
apt-get install apt php-dev php-fpm php php-cgi lighttpd -y

apt-get install -y libpcre3-dev curl php-pear libcurl3-openssl-dev php-dev php-phpseclib \
php-sqlite3 php-json php-xml php-sockets php-radius php-ldap php-gettext php-dom php-curl php-ctype

git clone https://github.com/jbboehr/php-psr.git
cd php-psr
phpize
./configure
make
make install
cd -

pecl channel-update pecl.php.net
#pecl install phalcon

apt-get install python3-pip -y
#wget https://www.python.org/ftp/python/3.8.2/Python-3.8.2.tgz
#tar xzf Python-3.8.2.tgz
#cd Python-3.8.2
#./configure --enable-optimizations
#make altinstall
#python3.8 --version
#update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.8 1

python3 -m pip install --upgrade pip
pip3 install jinja2 netaddr ujson
apt-get install syslog-ng clog unbound resolvconf isc-dhcp-server radvd rrdtool vsftpd sendmail csh mtree-netbsd -y

cat > /etc/resolv.conf <<EOF
domain localdomain
nameserver 127.0.0.1
nameserver 123.23.23.23
nameserver 123.26.26.26

EOF

### END Install php ###

### START Install zfs ###
apt-get update
apt-get install git build-essential fakeroot libncurses5-dev libssl-dev ccache -y
apt-get install build-essential autoconf libtool gawk alien fakeroot linux-headers-$(uname -r) -y
apt-get install zlib1g-dev uuid-dev libattr1-dev libblkid-dev libselinux-dev libudev-dev libdevmapper-dev -y
apt-get install parted lsscsi ksh -y
apt-get install spl -y
apt-get install zfs-dkms -y
apt-get install zfsutils-linux -y
/sbin/modprobe zfs
apt-get -f install
apt-get install zfs-zed -y
### END Install zfs ###

### START Install vpn ###
apt-get install openvpn -y
### END Install vpn ###

### START lighttpd opnsense ###
cat > /etc/lighttpd/lighttpd.conf <<EOF

var.log_root    = "/var/log/lighttpd"
var.server_root = "/usr/local/www"
var.state_dir   = "/var/run"
var.home_dir    = "/var/run/lighttpd"
var.conf_dir    = "/usr/local/etc/lighttpd"
var.vhosts_dir  = server_root + "/vhosts"
var.cache_dir   = "/var/cache/lighttpd"
var.socket_dir  = home_dir + "/sockets"

include "modules.conf"

server.port = 81
#server.use-ipv6 = "enable"
server.username  = "www-data"
server.groupname = "www-data"
server.document-root = "/usr/local/www"
server.pid-file = state_dir + "/lighttpd.pid"
server.errorlog = log_root + "/error.log"

include "conf.d/access_log.conf"
include "conf.d/debug.conf"
#server.event-handler = "freebsd-kqueue"
server.network-backend = "writev"
server.max-fds = 2048
server.stat-cache-engine = "simple"
server.max-connections = 1024
index-file.names += (
  "index.xhtml", "index.html", "index.htm", "default.htm", "index.php"
)

url.access-deny             = ( "~", ".inc" )

\$HTTP["url"] =~ "\.pdf$" {
  server.range-requests = "disable"
}

static-file.exclude-extensions = ( ".php", ".pl", ".fcgi", ".scgi" )
include "conf.d/mime.conf"
include "conf.d/dirlisting.conf"
server.follow-symlink = "enable"
server.upload-dirs = ( "/var/tmp" )

include "/etc/lighttpd/conf-enabled/*.conf"
#======
#include_shell "/usr/share/lighttpd/use-ipv6.pl " + server.port
#include_shell "/usr/share/lighttpd/create-mime.assign.pl"
#include_shell "/usr/share/lighttpd/include-conf-enabled.pl"

EOF

cat > /etc/php/7.3/cli/php.conf <<EOF

PHP_VER=73
PHP_VERSION=7.3.20
PHP_SAPI=cli cgi fpm embed
PHP_EXT_INC=pcre spl
PHP_EXT_DIR=20180731

EOF

cat > /etc/php/7.3/cgi/php.conf <<EOF

PHP_VER=73
PHP_VERSION=7.3.20
PHP_SAPI=cli cgi fpm embed
PHP_EXT_INC=pcre spl
PHP_EXT_DIR=20180731

EOF

cat > /etc/php/7.3/fpm/php.conf <<EOF

PHP_VER=73
PHP_VERSION=7.3.20
PHP_SAPI=cli cgi fpm embed
PHP_EXT_INC=pcre spl
PHP_EXT_DIR=20180731

EOF

cat >> /etc/php/7.3/cli/php.ini <<EOF

; File generated via configd
output_buffering = "0"
expose_php = Off
implicit_flush = true
magic_quotes_gpc = Off
max_execution_time = 900
max_input_time = 1800
max_input_vars = 5000
memory_limit = 512M
register_argc_argv = On
register_long_arrays = Off
variables_order = "GPCS"
file_uploads = On
upload_tmp_dir = /tmp
upload_max_filesize = 200M
post_max_size = 200M
html_errors = Off
zlib.output_compression = Off
zlib.output_compression_level = 1
include_path = ".:/usr/share/php:/usr/local/etc/inc:/usr/local/www:/usr/local/opnsense/mvc:/usr/local/opnsense/contrib:/usr/local/share/pear:/usr/local/share"
ignore_repeated_errors = on
error_reporting = E_ALL ^ (E_NOTICE | E_DEPRECATED | E_STRICT)
display_errors=on
log_errors=on
error_log=/tmp/PHP_errors.log
date.timezone="Etc/UTC"
session.save_path=/var/lib/php/sessions
pcre.jit=0

EOF

cat >> /etc/php/7.3/cgi/php.ini <<EOF

; File generated via configd
output_buffering = "0"
expose_php = Off
implicit_flush = true
magic_quotes_gpc = Off
max_execution_time = 900
max_input_time = 1800
max_input_vars = 5000
memory_limit = 512M
register_argc_argv = On
register_long_arrays = Off
variables_order = "GPCS"
file_uploads = On
upload_tmp_dir = /tmp
upload_max_filesize = 200M
post_max_size = 200M
html_errors = Off
zlib.output_compression = Off
zlib.output_compression_level = 1
include_path = ".:/usr/share/php:/usr/local/etc/inc:/usr/local/www:/usr/local/opnsense/mvc:/usr/local/opnsense/contrib:/usr/local/share/pear:/usr/local/share"
ignore_repeated_errors = on
error_reporting = E_ALL ^ (E_NOTICE | E_DEPRECATED | E_STRICT)
display_errors=on
log_errors=on
error_log=/tmp/PHP_errors.log
date.timezone="Etc/UTC"
session.save_path=/var/lib/php/sessions
pcre.jit=0

EOF

cat >> /etc/php/7.3/fpm/php.ini <<EOF

; File generated via configd
output_buffering = "0"
expose_php = Off
implicit_flush = true
magic_quotes_gpc = Off
max_execution_time = 900
max_input_time = 1800
max_input_vars = 5000
memory_limit = 512M
register_argc_argv = On
register_long_arrays = Off
variables_order = "GPCS"
file_uploads = On
upload_tmp_dir = /tmp
upload_max_filesize = 200M
post_max_size = 200M
html_errors = Off
zlib.output_compression = Off
zlib.output_compression_level = 1
include_path = ".:/usr/share/php:/usr/local/etc/inc:/usr/local/www:/usr/local/opnsense/mvc:/usr/local/opnsense/contrib:/usr/local/share/pear:/usr/local/share"
ignore_repeated_errors = on
error_reporting = E_ALL ^ (E_NOTICE | E_DEPRECATED | E_STRICT)
display_errors=on
log_errors=on
error_log=/tmp/PHP_errors.log
date.timezone="Etc/UTC"
session.save_path=/var/lib/php/sessions
pcre.jit=0

EOF

cat > /etc/php/7.3/mods-available/psr.ini <<EOF
extension=psr.so
EOF

cat > /etc/php/7.3/mods-available/phalcon.ini <<EOF
extension=phalcon.so
EOF

ln -s /etc/php/7.3/mods-available/psr.ini /etc/php/7.3/cli/conf.d/20-psr.ini
ln -s /etc/php/7.3/mods-available/psr.ini /etc/php/7.3/cgi/conf.d/20-psr.ini
ln -s /etc/php/7.3/mods-available/phalcon.ini /etc/php/7.3/cli/conf.d/30-phalcon.ini
ln -s /etc/php/7.3/mods-available/phalcon.ini /etc/php/7.3/cgi/conf.d/30-phalcon.ini

#lighttpd-enable-mod fastcgi fastcgi-php
#service lighttpd force-reload

### END lighttpd opnsense ###

### START dhcp ###

cat > /etc/dhcp/dhcpd.conf <<EOF
# dhcpd.conf
#
# Sample configuration file for ISC dhcpd
#

# option definitions common to all supported networks...
option domain-name "example.org";
option domain-name-servers ns1.example.org, ns2.example.org;

default-lease-time 600;
max-lease-time 7200;

# Use this to enble / disable dynamic dns updates globally.
#ddns-update-style none;

# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
#authoritative;

# Use this to send dhcp log messages to a different log file (you also
# have to hack syslog.conf to complete the redirection).
log-facility local7;

# No service will be given on this subnet, but declaring it helps the
# DHCP server to understand the network topology.

subnet 10.152.187.0 netmask 255.255.255.0 {
}

# This is a very basic subnet declaration.

subnet 10.254.239.0 netmask 255.255.255.224 {
  range 10.254.239.10 10.254.239.20;
  option routers rtr-239-0-1.example.org, rtr-239-0-2.example.org;
}

# This declaration allows BOOTP clients to get dynamic addresses,
# which we don't really recommend.

subnet 10.254.239.32 netmask 255.255.255.224 {
  range dynamic-bootp 10.254.239.40 10.254.239.60;
  option broadcast-address 10.254.239.31;
  option routers rtr-239-32-1.example.org;
}

# A slightly different configuration for an internal subnet.
subnet 10.5.5.0 netmask 255.255.255.224 {
  range 10.5.5.26 10.5.5.30;
  option domain-name-servers ns1.internal.example.org;
  option domain-name "internal.example.org";
  option routers 10.5.5.1;
  option broadcast-address 10.5.5.31;
  default-lease-time 600;
  max-lease-time 7200;
}

# Hosts which require special configuration options can be listed in
# host statements.   If no address is specified, the address will be
# allocated dynamically (if possible), but the host-specific information
# will still come from the host declaration.

host passacaglia {
  hardware ethernet 0:0:c0:5d:bd:95;
  filename "vmunix.passacaglia";
  server-name "toccata.example.com";
}

# Fixed IP addresses can also be specified for hosts.   These addresses
# should not also be listed as being available for dynamic assignment.
# Hosts for which fixed IP addresses have been specified can boot using
# BOOTP or DHCP.   Hosts for which no fixed address is specified can only
# be booted with DHCP, unless there is an address range on the subnet
# to which a BOOTP client is connected which has the dynamic-bootp flag
# set.
host fantasia {
  hardware ethernet 08:00:07:26:c0:a5;
  fixed-address fantasia.example.com;
}

# You can declare a class of clients and then do address allocation
# based on that.   The example below shows a case where all clients
# in a certain class get addresses on the 10.17.224/24 subnet, and all
# other clients get addresses on the 10.0.29/24 subnet.

class "foo" {
  match if substring (option vendor-class-identifier, 0, 4) = "SUNW";
}

shared-network 224-29 {
  subnet 10.17.224.0 netmask 255.255.255.0 {
    option routers rtr-224.example.org;
  }
  subnet 10.0.29.0 netmask 255.255.255.0 {
    option routers rtr-29.example.org;
  }
  pool {
    allow members of "foo";
    range 10.17.224.10 10.17.224.250;
  }
  pool {
    deny members of "foo";
    range 10.0.29.10 10.0.29.230;
  }
}
EOF

cat > /etc/dhcp/dhcpd6.conf <<EOF
# Server configuration file example for DHCPv6
# From the file used for TAHI tests - addresses chosen
# to match TAHI rather than example block.

# IPv6 address valid lifetime
#  (at the end the address is no longer usable by the client)
#  (set to 30 days, the usual IPv6 default)
default-lease-time 2592000;

# IPv6 address preferred lifetime
#  (at the end the address is deprecated, i.e., the client should use
#   other addresses for new connections)
#  (set to 7 days, the	usual IPv6 default)
preferred-lifetime 604800;

# T1, the delay before Renew
#  (default is 1/2 preferred lifetime)
#  (set to 1 hour)
option dhcp-renewal-time 3600;

# T2, the delay before Rebind (if Renews failed)
#  (default is 3/4 preferred lifetime)
#  (set to 2 hours)
option dhcp-rebinding-time 7200;

# Enable RFC 5007 support (same than for DHCPv4)
allow leasequery;

# Global definitions for name server address(es) and domain search list
option dhcp6.name-servers 3ffe:501:ffff:100:200:ff:fe00:3f3e;
option dhcp6.domain-search "test.example.com","example.com";

# Set preference to 255 (maximum) in order to avoid waiting for
# additional servers when there is only one
##option dhcp6.preference 255;

# Server side command to enable rapid-commit (2 packet exchange)
##option dhcp6.rapid-commit;

# The delay before information-request refresh
#  (minimum is 10 minutes, maximum one day, default is to not refresh)
#  (set to 6 hours)
option dhcp6.info-refresh-time 21600;

# The path of the lease file
dhcpv6-lease-file-name "/var/db/dhcpd6.leases";

# Static definition (must be global)
host myclient {
	# The entry is looked up by this
	host-identifier option
		dhcp6.client-id 00:01:00:01:00:04:93:e0:00:00:00:00:a2:a2;

	# A fixed address
	fixed-address6 3ffe:501:ffff:100::1234;

	# A fixed prefix
	fixed-prefix6 3ffe:501:ffff:101::/64;

	# Override of the global definitions,
	# works only when a resource (address or prefix) is assigned
	option dhcp6.name-servers 3ffe:501:ffff:100:200:ff:fe00:4f4e;

	# For debug (to see when the entry statements are executed)
	#  (log "sol" when a matching Solicitation is received)
	##if packet(0,1) = 1 { log(debug,"sol"); }
}

host otherclient {
        # This host entry is hopefully matched if the client supplies a DUID-LL
        # or DUID-LLT containing this MAC address.
        hardware ethernet 01:00:80:a2:55:67;

        fixed-address6 3ffe:501:ffff:100::4321;
}

# The subnet where the server is attached
#  (i.e., the server has an address in this subnet)
subnet6 3ffe:501:ffff:100::/64 {
	# Two addresses available to clients
	#  (the third client should get NoAddrsAvail)
	range6 3ffe:501:ffff:100::10 3ffe:501:ffff:100::11;

	# Use the whole /64 prefix for temporary addresses
	#  (i.e., direct application of RFC 4941)
	range6 3ffe:501:ffff:100:: temporary;

	# Some /64 prefixes available for Prefix Delegation (RFC 3633)
	prefix6 3ffe:501:ffff:100:: 3ffe:501:ffff:111:: /64;
}

# A second subnet behind a relay agent
subnet6 3ffe:501:ffff:101::/64 {
	range6 3ffe:501:ffff:101::10 3ffe:501:ffff:101::11;

	# Override of the global definitions,
	# works only when a resource (address or prefix) is assigned
	option dhcp6.name-servers 3ffe:501:ffff:101:200:ff:fe00:3f3e;

}

# A third subnet behind a relay agent chain
subnet6 3ffe:501:ffff:102::/64 {
	range6 3ffe:501:ffff:102::10 3ffe:501:ffff:102::11;
}
EOF

cat > /etc/default/isc-dhcp-server <<EOF
INTERFACESv4="enp4s0"
INTERFACESv6="enp4s0"
EOF

### END dhcp ###

### START Scirius, nginx, revrse proxy, supervisor and ssl ###

mkdir -p /var/lib/scirius/static/
apt-get update && \
apt-get install -y scirius
sed -i 's/ELASTICSEARCH_VERSION = 5/ELASTICSEARCH_VERSION = 6/g' /etc/scirius/local_settings.py
sed -i 's/KIBANA_VERSION=4/KIBANA_VERSION = 6/g' /etc/scirius/local_settings.py
sed -i 's/KIBANA_INDEX = "kibana-int"/KIBANA_INDEX = ".kibana"/g' /etc/scirius/local_settings.py
sed -i 's/KIBANA_DASHBOARDS_PATH = "\/opt\/selks\/kibana5-dashboards\/"/KIBANA6_DASHBOARDS_PATH = "\/opt\/selks\/kibana6-dashboards\/"/g' /etc/scirius/local_settings.py
echo "ELASTICSEARCH_KEYWORD = \"keyword\"" >> /etc/scirius/local_settings.py
echo "USE_MOLOCH = True" >> /etc/scirius/local_settings.py
echo "MOLOCH_URL = \"http://localhost:8005\"" >> /etc/scirius/local_settings.py

# supervisor conf
ln -s /usr/share/doc/scirius/examples/scirius-supervisor.conf /etc/supervisor/conf.d/scirius-supervisor.conf

# Set the right permissions for the logstash user to run suricata
chown -R logstash:logstash /var/log/suricata

# www-data needs to write Suricata rules
chown -R www-data.www-data /etc/suricata/rules/

mkdir -p /etc/nginx/ssl
openssl req -new -nodes -x509 -subj "/C=FR/ST=IDF/L=Paris/O=Stamus/CN=SELKS" -days 3650 -keyout /etc/nginx/ssl/scirius.key -out /etc/nginx/ssl/scirius.crt -extensions v3_ca 

rm -rf /etc/nginx/sites-enabled/default

cat >> /etc/nginx/sites-available/selks5.conf <<EOF

server {
    listen 127.0.0.1:80;
    listen 127.0.1.1:80;
    listen 443 default_server ssl;
    ssl_certificate /etc/nginx/ssl/scirius.crt;
    ssl_certificate_key /etc/nginx/ssl/scirius.key;
    server_name SELKS;
    access_log /var/log/nginx/scirius.access.log;
    error_log /var/log/nginx/scirius.error.log;

    # https://docs.djangoproject.com/en/dev/howto/static-files/#serving-static-files-in-production
    location /static/ { # STATIC_URL
        alias /var/lib/scirius/static/; # STATIC_ROOT
        expires 30d;
    }

    location /media/ { # MEDIA_URL
        alias /var/lib/scirius/static/; # MEDIA_ROOT
        expires 30d;
    }

    location /app/moloch/ {
        proxy_pass https://127.0.0.1:8005;
        proxy_redirect off;
    }

    location /plugins/ {
        proxy_pass http://127.0.0.1:5601/plugins/;
        proxy_redirect off;
    }

    location /dlls/ {
        proxy_pass http://127.0.0.1:5601/dlls/;
        proxy_redirect off;
    }

    location /socket.io/ {
        proxy_pass http://127.0.0.1:5601/socket.io/;
        proxy_redirect off;
    }

    location /dataset/ {
        proxy_pass http://127.0.0.1:5601/dataset/;
        proxy_redirect off;
    }

    location /translations/ {
        proxy_pass http://127.0.0.1:5601/translations/;
        proxy_redirect off;
    }

    location ^~ /built_assets/ {
        proxy_pass http://127.0.0.1:5601/built_assets/;
        proxy_redirect off;
    }

    location /ui/ {
        proxy_pass http://127.0.0.1:5601/ui/;
        proxy_redirect off;
    }

    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_read_timeout 600;
        proxy_set_header Host \$http_host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect off;
    }
}
EOF

# enable sites
ln -s /etc/nginx/sites-available/selks5.conf /etc/nginx/sites-enabled/selks5.conf

cd /usr/share/python/scirius/ && \
source bin/activate
python bin/manage.py loaddata /etc/scirius/scirius.json
python bin/manage.py addsource "ETOpen Ruleset" https://rules.emergingthreats.net/open/suricata-5.0/emerging.rules.tar.gz http sigs
python bin/manage.py addsource "SSLBL abuse.ch" https://sslbl.abuse.ch/blacklist/sslblacklist_tls_cert.rules http sig
python bin/manage.py addsource "Suricata Traffic ID ruleset" https://raw.githubusercontent.com/jasonish/suricata-trafficid/master/rules/traffic-id.rules http sig
python bin/manage.py defaultruleset "Default SELKS ruleset"
python bin/manage.py addsuricata SELKS "Suricata on SELKS" /etc/suricata/rules "Default SELKS ruleset"
python bin/manage.py updatesuricata
deactivate

/usr/bin/supervisorctl reread && \
/usr/bin/supervisorctl update && \
/usr/bin/supervisorctl restart scirius && \
/bin/systemctl restart nginx
/bin/systemctl enable supervisor

# set permissions for Scirius 
touch /var/log/scirius.log
touch /var/log/scirius-error.log
chown www-data /var/log/scirius*
chown -R www-data /var/lib/scirius/git-sources/
chown -R www-data /var/lib/scirius/db/
chown -R www-data.www-data /etc/suricata/rules/

# fix permissions for user www-data/scirius
usermod -a -G logstash www-data
mkdir -p /var/run/suricata/
chmod g+w /var/run/suricata/ -R

### END Scirius, nginx, revrse proxy, supervisor and ssl ###

### START Moloch set up 

mkdir -p /opt/molochtmp
cd /opt/molochtmp/ && \
apt-get update && apt-get install -y libjson-perl libyaml-dev libcrypto++6 libwww-perl
#wget https://files.molo.ch/builds/ubuntu-18.04/moloch_1.8.0-1_amd64.deb
#dpkg -i moloch_1.8.0-1_amd64.deb
wget https://files.molo.ch/builds/ubuntu-18.04/moloch_2.1.2-1_amd64.deb
dpkg -i moloch_2.1.2-1_amd64.deb


cd /opt/
rm /opt/molochtmp -r

# make sure we hold the moloch pkg version unless explicit upgrade is wanted/needed
#apt-mark hold moloch

### END Moloch set up

### START Install RLlib/AI/ML scripts ###
apt-get install -y g++ python3-dev
python3 -m pip install six==1.13.0
python3 -m pip install protobuf==3.17.3
python3 -m pip install -U ray==1.6.0
python3 -m pip install ray[tune]
python3 -m pip install ray[rllib]
python3 -m pip install ray[default]
python3 -m pip install pyarrow
python3 -m pip install fsspec
python3 -m pip install tensorflow==2.6.0
python3 -m pip install aioredis==1.3.1
python3 -m pip install pandas
python3 -m pip install tqdm
python3 -m pip install requests
python3 -m pip install PyYAML==3.13
### END Install RLlib/AI/ML scripts ###

### START Install SELKS/StamusN scripts ###

apt-get install -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confnew" selks-scripts-stamus

### END Install SELKS/StamusN scripts ###


# Set up a curator old logs removal
# flush everything that is older than 2 weeks

cat >> /opt/selks/delete-old-logs.sh <<EOF
#!/bin/bash

/opt/elasticsearch-curator/curator_cli delete_indices --filter_list \
'
[
  {
    "filtertype": "age",
    "source": "creation_date",
    "direction": "older",
    "unit": "days",
    "unit_count": 14
  },
  {
    "filtertype": "pattern",
    "kind": "prefix",
    "value": "logstash*"
  }
]
'
EOF

chmod 755 /opt/selks/delete-old-logs.sh

# Set up a cron jobs for Logstash, Scirius, rule updates
echo "0 2 * * * www-data ( cd /usr/share/python/scirius/ && . bin/activate && python bin/manage.py updatesuricata && deactivate )" >> /etc/crontab
echo "0 3 * * * root ( /data/moloch/db/db.pl http://127.0.0.1:9200 expire daily 14 )" >> /etc/crontab
echo "0 4 * * * root /opt/selks/delete-old-logs.sh" >> /etc/crontab
# always leave a empty line before cron files end
echo "" >> /etc/crontab

# Set up the host name
echo "SELKS" > /etc/hostname

# Enable the ssh banners
sed -i -e 's|\#Banner \/etc\/issue\.net|Banner \/etc\/issue\.net|'  /etc/ssh/sshd_config


# Edit the Icon "Install Debian Stretch" name on a Live Desktop 
# to "Install SELKS"
sed -i -e 's|Name\=Install Debian sid|Name\=Install SELKS|'  /usr/share/applications/debian-installer-launcher.desktop 

# Install exception for local certificate
certutil -A -n SELKS -t "P,p,p"  -i /etc/nginx/ssl/scirius.crt  -d /etc/iceweasel/profile/
chmod a+r /etc/iceweasel/profile/*db

#clean up root desktop
rm -f /root/Desktop/* 

apt-get update && \
apt-get install -y linux-headers-amd64

# Clean devel and some others packages
apt-get -y remove bison  autoconf automake libc6-dev autotools-dev libpcap-dev libnet1-dev libcap-ng-dev \
	libnetfilter-queue-dev  libnss3-dev libnspr4-dev \
	xscreensaver xscreensaver-data manpages-dev libjansson-dev \
	ghostscript xmms2-core x11proto-core-dev linux-libc-dev \
	rpm alien sane-utils libsane rpm2cpio \
	libx11-dev libx11-doc m4

apt-get autoremove -y
apt-get clean && \
cat /dev/null > ~/.bash_history && history -c

