#!/bin/bash

# Copyright(C) 2019, Stamus Networks
# All rights reserved
# Part of Debian SELKS scripts
# Written by Peter Manev <pmanev@stamus-networks.com>
#
# Please run on Debian
#
# This script comes with ABSOLUTELY NO WARRANTY!
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Wrapper around init/first time set up scripts

# make sure we save the logs for investigation if needed.

if (( $EUID != 0 )); then
     echo -e "Please run this script as root or with \"sudo\".\n"
     exit 1
fi

mkdir -p /opt/selks/log/
(
echo "START of first time setup script - $(date) "

#/usr/bin/selks-setup-ids-interface

#if [ $? -ne 0 ]; then
#    echo "Previous job failed...Exiting..."
#    echo -e "\n### Exited with ERROR  ###\n"
#    echo -e "\nFull log located at - /opt/selks/log/selks-first-time-setup_stamus.log"
#    echo -e "\nPress Enter to continue\n"
#    read
#    exit 1
#fi
echo -e "\nFull log located at - /opt/selks/log/selks-first-time-setup_stamus.log"

#echo "FPC - Full Packet Capture. Suricata will rotate and delete the pcap captured files."
echo "FPC_Retain - Full Packet Capture with having Moloch's pcap retention/rotation. Keeps the pcaps as long as there is space available."
#echo -e "None - disable packet capture\n"

#PS3="Please choose an option. Type in a number and hit \"Enter\" "
#select option in  FPC FPC_Retain NONE
#do
#    case $option in
#        FPC)
#            echo "Enable Full Pcacket Capture"
#            EXIT_STATUS="SUCCESS"
#            /usr/bin/selks-enable-suri-capture_stamus && \
#            /bin/systemctl restart suricata && \
#            /usr/bin/selks-molochdb-init-setup_stamus FPC
#            if [ $? -ne 0 ]; then
#              echo -e "\e[31mMoloch set up job failed...Exiting..."
#              echo -e "\e[31m### Exited with ERROR  ###\n"
#              echo -e "\e[0m"
#              EXIT_STATUS="FAILED"
#            fi
#            break;;
#        FPC_Retain)
#            echo "Enable Full Pcacket Capture with pcap retaining "
#            EXIT_STATUS="SUCCESS"
#            /usr/bin/selks-enable-suri-capture_stamus && \
#            /bin/systemctl restart suricata && \
#            /usr/bin/selks-molochdb-init-setup_stamus
#            if [ $? -ne 0 ]; then
#              echo -e "\e[31mMoloch set up job failed...Exiting..."
#              echo -e "\e[31m### Exited with ERROR  ###\n"
#              echo -e "\e[0m"
#              EXIT_STATUS="FAILED"
#            fi
#            break;;
#        NONE)
#            echo "Disable Full Packet Capture "
#            EXIT_STATUS="SUCCESS"
#            /usr/bin/selks-disable-suri-capture_stamus && \
#            /bin/systemctl restart suricata
#            if [ $? -ne 0 ]; then
#              echo -e "\e[31mMoloch set up job failed...Exiting..."
#              echo -e "\e[31m### Exited with ERROR  ###\n"
#              echo -e "\e[0m"
#              EXIT_STATUS="FAILED"
#            fi
#            break;;
#     esac
#done

echo "Enable Full Pcacket Capture with pcap retaining "
EXIT_STATUS="SUCCESS"
#/usr/bin/selks-enable-suri-capture_stamus && \
#/bin/systemctl restart suricata && \
/usr/bin/selks-molochdb-init-setup_stamus
if [ $? -ne 0 ]; then
  echo -e "\e[31mMoloch set up job failed...Exiting..."
  echo -e "\e[31m### Exited with ERROR  ###\n"
  echo -e "\e[0m"
  EXIT_STATUS="FAILED"
fi

#Migrate scirius to PostgresSQL
if [ -e "/etc/scirius.bak" ]; then
  rm -rf /etc/scirius
  mv /etc/scirius.bak  /etc/scirius
fi
sed -i "s/#'ENGINE': 'django.db.backends.sqlite3',/'ENGINE': 'django.db.backends.sqlite3',/g" /etc/scirius/local_settings.py
sed -i "s/#'NAME': os.path.join(BASE_DIR, 'db', 'db.sqlite3'),/'NAME': os.path.join(BASE_DIR, 'db', 'db.sqlite3'),/g" /etc/scirius/local_settings.py
sed -i "s/'ENGINE': 'django.db.backends.postgresql_psycopg2',/#'ENGINE': 'django.db.backends.postgresql_psycopg2',/g" /etc/scirius/local_settings.py
sed -i "s/'NAME': 'postgres',/#'NAME': 'postgres',/g" /etc/scirius/local_settings.py
sed -i "s/'USER':'postgres',/#'USER':'postgres',/g" /etc/scirius/local_settings.py
sed -i "s/'PASSWORD':'postgres',/#'PASSWORD':'postgres',/g" /etc/scirius/local_settings.py
sed -i "s/'HOST':'127.0.0.1',/#'HOST':'127.0.0.1',/g" /etc/scirius/local_settings.py
sed -i "s/'PORT':'5432',/#'PORT':'5432',/g" /etc/scirius/local_settings.py

cat >> /usr/share/python/scirius/removecontent.py <<EOF
from django.contrib.contenttypes.models import ContentType
ContentType.objects.all().delete()
quit()
EOF

cat /etc/scirius/local_settings.py

service supervisor restart
/usr/bin/supervisorctl restart scirius

cd /usr/share/python/scirius/ \
&& . bin/activate \
&& python -m pip install psycopg2-binary \
&& python bin/manage.py dumpdata > datadump.json \
&& deactivate && cd /opt/

mv /etc/scirius  /etc/scirius.bak
ln -s /selks/staging/etc/scirius /etc/scirius
sed -i "s/'ENGINE': 'django.db.backends.sqlite3',/#'ENGINE': 'django.db.backends.sqlite3',/g" /etc/scirius/local_settings.py
sed -i "s/'NAME': os.path.join(BASE_DIR, 'db', 'db.sqlite3'),/#'NAME': os.path.join(BASE_DIR, 'db', 'db.sqlite3'),/g" /etc/scirius/local_settings.py
sed -i "s/#'ENGINE': 'django.db.backends.postgresql_psycopg2',/'ENGINE': 'django.db.backends.postgresql_psycopg2',/g" /etc/scirius/local_settings.py
sed -i "s/#'NAME': 'postgres',/'NAME': 'postgres',/g" /etc/scirius/local_settings.py
sed -i "s/#'USER':'postgres',/'USER':'postgres',/g" /etc/scirius/local_settings.py
sed -i "s/#'PASSWORD':'postgres',/'PASSWORD':'postgres',/g" /etc/scirius/local_settings.py
sed -i "s/#'HOST':'127.0.0.1',/'HOST':'127.0.0.1',/g" /etc/scirius/local_settings.py
sed -i "s/#'PORT':'5432',/'PORT':'5432',/g" /etc/scirius/local_settings.py

cat /etc/scirius/local_settings.py
cat /usr/share/python/scirius/removecontent.py
ls -la /usr/share/python/scirius/datadump.json

service postgresql start
sudo -u postgres psql -h /run/postgresql -c "ALTER USER postgres WITH PASSWORD 'postgres';"
/usr/bin/supervisorctl restart scirius

cd /usr/share/python/scirius/ \
&& . bin/activate \
&& python bin/manage.py migrate --run-syncdb \
&& python bin/manage.py shell < removecontent.py \
&& python bin/manage.py loaddata datadump.json \
&& deactivate && cd /opt/

service elasticsearch start
cd /usr/share/python/scirius/ && . bin/activate && python bin/manage.py kibana_reset && deactivate && cd /opt/

if [ $? -ne 0 ]; then
    echo -e "\e[31mDashboards loading set up job failed...Exiting..."
    echo -e "\e[31m### Exited with ERROR  ###\n"
    echo -e "\e[0m"
    EXIT_STATUS="FAILED"
fi


mv /etc/nftables.conf /etc/nftables.conf.bak
ln -s /selks/staging/etc/nftables.conf /etc/nftables.conf
#mv /etc/suricata/suricata.yaml /etc/suricata/suricata.yaml.bak
#ln -s /selks/staging/etc/suricata/suricata.yaml /etc/suricata/suricata.yaml
mv /etc/init.d/suricata /etc/init.d/suricata.bak
ln -s /selks/staging/etc/init.d/suricata /etc/init.d/suricata
mv /etc/init.d/suricataips /etc/init.d/suricataips.bak
ln -s /selks/staging/etc/init.d/suricataips /etc/init.d/suricataips

#cat > /etc/network/interfaces.d/eno1 <<EOF
## Stamus Networks SELKS eno1 interface set up auto generated!
#auto eno1
#iface eno1 inet dhcp
#    up ip link set dev eno1 up
#    down ip link set dev eno1 down
#
#EOF

# nft -f /etc/nftables.conf

/bin/systemctl daemon-reload

#apt-get remove iptables -y

echo "FINISH of first time setup script - $(date) " 

echo -e "\e[1m\nExited with ${EXIT_STATUS}"
echo -e "\e[1mFull log located at - /opt/selks/log/selks-first-time-setup_stamus.log"
echo -e "\e[1mPress enter to continue\n"
echo -e "\e[0m"
#read
) 2>&1 | tee -a /opt/selks/log/selks-first-time-setup_stamus.log




