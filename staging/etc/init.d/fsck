#!/bin/sh

### BEGIN INIT INFO
# Provides:          fsck
# Required-Start:
# Required-Stop:     $swap
# Should-Start:
# Should-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Setup swap space
# Description:       Setup swap space
### END INIT INFO

# PROVIDE: fsck
# REQUIRE: swap
# KEYWORD: nojail

PATH=/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/sbin/fsck
NAME=fsck
DESC="Run file system checks"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

. /lib/lsb/init-functions

. /etc/rc.subr

name=$NAME
desc=$DESC

fsck_start()
{
	if [ "$autoboot" = no ]; then
		echo "Fast boot: skipping disk checks."
	elif [ ! -r /etc/fstab ]; then
		echo "Warning! No /etc/fstab: skipping disk checks."
	elif [ "$autoboot" = yes ]; then
		# During fsck ignore SIGQUIT
		trap : 3

		check_startmsgs && echo "Starting file system checks:"
		if checkyesno background_fsck; then
			fsck -F -p
		else
			fsck -p
		fi

		err=$?
		if [ ${err} -eq 3 ]; then
			echo "Warning! Some of the devices might not be" \
			    "available; retrying"
			root_hold_wait
			check_startmsgs && echo "Restarting file system checks:"
			if checkyesno background_fsck; then
				fsck -F -p
			else
				fsck -p
			fi
			err=$?
		fi

		case ${err} in
		0)
			;;
		2)
			stop_boot
			;;
		4)
			echo "Rebooting..."
			reboot
			echo "Reboot failed; help!"
			stop_boot
			;;
		8|16)
			if checkyesno fsck_y_enable; then
				echo "File system preen failed, trying fsck -y ${fsck_y_flags}"
				fsck -y ${fsck_y_flags}
				case $? in
				0)
					;;
				*)
				echo "Automatic file system check failed; help!"
					stop_boot
					;;
				esac
			else
				echo "Automatic file system check failed; help!"
				stop_boot
			fi
			;;
		12)
			echo "Boot interrupted."
			stop_boot
			;;
		130)
			stop_boot
			;;
		*)
			echo "Unknown error ${err}; help!"
			stop_boot
			;;
		esac
	fi
}

load_rc_config $name

case "$1" in
    start)
        log_daemon_msg "Starting $DESC" $NAME
        if ! fsck_start
        then
            log_end_msg 1
        else
            log_end_msg 0
        fi
        ;;
    stop)
        log_daemon_msg "Stopping $DESC" $NAME
        log_end_msg 0
        ;;
    reload|force-reload)
        log_daemon_msg "Reloading $DESC configuration" $NAME
        fsck_start
        ;;
    reopen-logs)
        log_daemon_msg "Reopening $DESC logs" $NAME
        ;;
    restart)
        $0 stop
        $0 start
        ;;
    configtest|testconfig)
        ;;
    status)
        status_of_proc -p "$PIDFILE" "$DAEMON" sysctl && exit 0 || exit $?
        ;;
    *)
        echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload|reopen-logs|configtest|status}" >&2
        exit 1
        ;;
esac

exit 0
