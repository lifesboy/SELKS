#!/bin/sh
### BEGIN INIT INFO
# Provides:          ray
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Should-Start:      fam
# Should-Stop:       fam
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start the ray serve cluster.
# Description:       ray cluster for serving ai model
### END INIT INFO


PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin
DAEMON=/usr/local/bin/ray
NAME=ray
DESC="ray cluster"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
DAEMON_OPTS="--head --node-ip-address 127.0.0.1 --address selks.ddns.net --port 6379 --include-dashboard true --dashboard-host 0.0.0.0 --dashboard-port 8265 --gcs-server-port 8075 --object-manager-port 8076 --node-manager-port 8077 --min-worker-port 10002 --max-worker-port 19999"
#DAEMON_OPTS="--head --node-ip-address 123.16.153.97 --address selks.ddns.net --port 6379 --dashboard-host 0.0.0.0 --dashboard-port 8265"

test -x $DAEMON || exit 0

set -e

if [ "$1" != status ]; then
    # be sure there is a /var/run/lighttpd, even with tmpfs
    # The directory is defined as volatile and may thus be non-existing
    # after a boot (DPM ยง9.3.2)
    owner=root
    group=root
fi

. /lib/lsb/init-functions

case "$1" in
    start)
        log_daemon_msg "Starting $DESC" $NAME
        $DAEMON start $DAEMON_OPTS
        #combine tensorboard to block rllib service daemon after starting ray
        /usr/local/bin/tensorboard --logdir /drl/ray_results/ --host 0.0.0.0  --port 6006
        ;;
    stop)
        log_daemon_msg "Stopping $DESC" $NAME
        $DAEMON stop
        ;;
    reload|force-reload)
        log_daemon_msg "Reloading $DESC configuration" $NAME
        $DAEMON up
        ;;
    reopen-logs)
        log_daemon_msg "Reopening $DESC logs" $NAME
        ;;
    restart)
        $0 stop
        $0 start
        ;;
    status)
        $DAEMON status
        ;;
    *)
        echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload|reopen-logs|configtest|status}" >&2
        exit 1
        ;;
esac

exit 0
