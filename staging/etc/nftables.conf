#!/usr/sbin/nft -f

flush ruleset

table inet filter {
	chain input {
		type filter hook input priority 1; counter accept;
	}
	chain forward {
		type filter hook forward priority 1; counter accept;
	}
	chain output {
		type filter hook output priority 1; counter accept;
	}
	chain IPS-Input {
        type filter hook input priority 11; policy accept; counter accept;
        queue num 3 bypass
    }
    chain IPS-Output {
        type filter hook output priority 11; policy accept; counter accept;
        queue num 4 bypass
    }
    chain IPS {
        type filter hook forward priority 12; policy accept; counter accept;
        queue num 5 bypass
    }
}

table ip filter {
	# allow LAN to firewall, allow WAN to firewall
	chain input {
		type filter hook input priority 0; policy accept; counter accept;
		iifname "enp4s0" accept; counter accept;
		iifname "eno1" accept; counter accept;
	}

	# allow packets from LAN to WAN, and WAN to LAN if LAN initiated the connection
	chain forward {
		type filter hook forward priority 0; policy drop; counter accept;
		iifname "enp4s0" oifname "eno1" accept; counter accept;
		iifname "eno1" oifname "enp4s0" ct state related,established accept; counter accept;
	}

	# allow all packets sent by the firewall machine itself
	chain output {
		type filter hook output priority 100; policy accept; counter accept;
	}
}

table ip6 filter {
	# allow LAN to firewall, allow WAN to firewall
	chain input {
		type filter hook input priority 0; policy accept; counter accept;
		iifname "enp4s0" accept; counter accept;
		iifname "eno1" accept; counter accept;
	}

	# allow packets from LAN to WAN, and WAN to LAN if LAN initiated the connection
	chain forward {
		type filter hook forward priority 0; policy drop; counter accept;
		iifname "enp4s0" oifname "eno1" accept; counter accept;
		iifname "eno1" oifname "enp4s0" ct state related,established accept; counter accept;
	}

	# allow all packets sent by the firewall machine itself
	chain output {
		type filter hook output priority 100; policy accept; counter accept;
	}
}

table ip nat {
	chain prerouting {
		type nat hook prerouting priority 0; policy accept; counter accept;
	}

	# for all packets to WAN, after routing, replace source address with primary IP of WAN interface
	chain postrouting {
		type nat hook postrouting priority 100; policy accept; counter accept;
		oifname "eno1" masquerade; counter accept;
	}
}

table ip6 nat {
	chain prerouting {
		type nat hook prerouting priority 0; policy accept; counter accept;
	}

	# for all packets to WAN, after routing, replace source address with primary IP of WAN interface
	chain postrouting {
		type nat hook postrouting priority 100; policy accept; counter accept;
		oifname "eno1" masquerade; counter accept;
	}
}